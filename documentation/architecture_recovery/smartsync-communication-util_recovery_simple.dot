/* ------------------------------------------------------------ */
/* created with bunch v3 */
/* Objective Function value = 1.9661016949152539*/
*/ SmartSync Communication Util Recovery */
/* ------------------------------------------------------------ */

digraph G {
size= "10,10";
rotate = 90;
subgraph cluster0 {
label = "(SS-L2):(O)com.google.gson.Gson:<init>()";
color = black;
style = bold;

"(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.reflect.Type)"[label="(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.reflect.Type)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.ServiceServiceCommunication:getAllServices()"[label="M:communication.ServiceServiceCommunication:getAllServices()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.ServiceServiceCommunication$1:<init>(communication.ServiceServiceCommunication)"[label="(O)communication.ServiceServiceCommunication$1:<init>(communication.ServiceServiceCommunication)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)communication.ServiceServiceCommunication$1:getType()"[label="(M)communication.ServiceServiceCommunication$1:getType()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:communication.UserServiceCommunication$1"[label="C:communication.UserServiceCommunication$1",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"communication.UserServiceCommunication$1"[label="communication.UserServiceCommunication$1",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"com.google.gson.reflect.TypeToken"[label="com.google.gson.reflect.TypeToken",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)com.google.gson.Gson:<init>()"[label="(O)com.google.gson.Gson:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)"[label="M:communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.ServiceServiceCommunication:jsonToService(java.lang.String)"[label="M:communication.ServiceServiceCommunication:jsonToService(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.HouseholdServiceCommunication$1:<init>(communication.HouseholdServiceCommunication)"[label="(O)communication.HouseholdServiceCommunication$1:<init>(communication.HouseholdServiceCommunication)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)communication.HouseholdServiceCommunication$1:getType()"[label="(M)communication.HouseholdServiceCommunication$1:getType()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:getAllHouseholds()"[label="M:communication.HouseholdServiceCommunication:getAllHouseholds()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.UserServiceCommunication:getAllUsers()"[label="M:communication.UserServiceCommunication:getAllUsers()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)communication.UserServiceCommunication$1:getType()"[label="(M)communication.UserServiceCommunication$1:getType()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.UserServiceCommunication$1:<init>(communication.UserServiceCommunication)"[label="(O)communication.UserServiceCommunication$1:<init>(communication.UserServiceCommunication)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"communication.HouseholdServiceCommunication$1"[label="communication.HouseholdServiceCommunication$1",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:communication.HouseholdServiceCommunication$1"[label="C:communication.HouseholdServiceCommunication$1",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)"[label="M:communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.Class)"[label="(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.Class)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.UserServiceCommunication:jsonToUser(java.lang.String)"[label="M:communication.UserServiceCommunication:jsonToUser(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)"[label="M:communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
}
subgraph cluster1 {
label = "(SS-L2):(M)java.lang.StringBuilder:append(java.lang.String)";
color = black;
style = bold;

"M:communication.ServiceServiceCommunication:<init>()"[label="M:communication.ServiceServiceCommunication:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.UserServiceCommunication:<init>()"[label="M:communication.UserServiceCommunication:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)java.lang.Object:<init>()"[label="(O)java.lang.Object:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.UserPOJO:<init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"[label="M:model.UserPOJO:<init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.HouseholdServiceLookUpPOJO:<init>()"[label="M:model.HouseholdServiceLookUpPOJO:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.HouseholdUserLookUpPOJO:<init>(java.lang.Long,java.lang.Long,java.lang.Long)"[label="M:model.HouseholdUserLookUpPOJO:<init>(java.lang.Long,java.lang.Long,java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:util.HttpUtil:<init>()"[label="M:util.HttpUtil:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.HouseholdUserLookUpPOJO:<init>()"[label="M:model.HouseholdUserLookUpPOJO:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.ServicePOJO:<init>(java.lang.Long,java.lang.Long,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String)"[label="M:model.ServicePOJO:<init>(java.lang.Long,java.lang.Long,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.HouseholdPOJO:<init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"[label="M:model.HouseholdPOJO:<init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.HouseholdServiceLookUpPOJO:<init>(java.lang.Long,java.lang.Long,java.lang.Long)"[label="M:model.HouseholdServiceLookUpPOJO:<init>(java.lang.Long,java.lang.Long,java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.ServicePOJO:<init>()"[label="M:model.ServicePOJO:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:Test:<init>()"[label="M:Test:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:<init>()"[label="M:communication.HouseholdServiceCommunication:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.ServiceServiceCommunication$1:<init>(communication.ServiceServiceCommunication)"[label="M:communication.ServiceServiceCommunication$1:<init>(communication.ServiceServiceCommunication)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.UserServiceCommunication$1:<init>(communication.UserServiceCommunication)"[label="M:communication.UserServiceCommunication$1:<init>(communication.UserServiceCommunication)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication$1:<init>(communication.HouseholdServiceCommunication)"[label="M:communication.HouseholdServiceCommunication$1:<init>(communication.HouseholdServiceCommunication)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)com.google.gson.reflect.TypeToken:<init>()"[label="(O)com.google.gson.reflect.TypeToken:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)"[label="M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.io.IOException:printStackTrace()"[label="(M)java.io.IOException:printStackTrace()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)"[label="(O)communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(S)util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)"[label="(S)util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.HouseholdPOJO:toString()"[label="M:model.HouseholdPOJO:toString()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.StringBuilder:append(java.lang.String)"[label="(M)java.lang.StringBuilder:append(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
}
subgraph cluster2 {
label = "(SS-L2):C:communication.HouseholdServiceCommunication";
color = black;
style = bold;

"model.HouseholdPOJO"[label="model.HouseholdPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:model.HouseholdPOJO"[label="C:model.HouseholdPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"model.HouseholdServiceLookUpPOJO"[label="model.HouseholdServiceLookUpPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:model.HouseholdServiceLookUpPOJO"[label="C:model.HouseholdServiceLookUpPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:model.UserPOJO"[label="C:model.UserPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"model.UserPOJO"[label="model.UserPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:model.ServicePOJO"[label="C:model.ServicePOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"model.ServicePOJO"[label="model.ServicePOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:model.HouseholdUserLookUpPOJO"[label="C:model.HouseholdUserLookUpPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"model.HouseholdUserLookUpPOJO"[label="model.HouseholdUserLookUpPOJO",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.lang.Object"[label="java.lang.Object",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"util.HttpUtil"[label="util.HttpUtil",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.lang.StringBuilder"[label="java.lang.StringBuilder",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.lang.Exception"[label="java.lang.Exception",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.lang.String"[label="java.lang.String",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:communication.ServiceServiceCommunication"[label="C:communication.ServiceServiceCommunication",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:communication.ServiceServiceCommunication$1"[label="C:communication.ServiceServiceCommunication$1",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"communication.ServiceServiceCommunication$1"[label="communication.ServiceServiceCommunication$1",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"communication.ServiceServiceCommunication"[label="communication.ServiceServiceCommunication",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.net.URLConnection"[label="java.net.URLConnection",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.net.HttpURLConnection"[label="java.net.HttpURLConnection",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.io.DataOutputStream"[label="java.io.DataOutputStream",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.io.BufferedReader"[label="java.io.BufferedReader",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.net.URL"[label="java.net.URL",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:util.HttpUtil"[label="C:util.HttpUtil",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.io.InputStreamReader"[label="java.io.InputStreamReader",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.StringBuilder:append(int)"[label="(M)java.lang.StringBuilder:append(int)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:model.UserPOJO:toString()"[label="M:model.UserPOJO:toString()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.StringBuilder:append(char)"[label="(M)java.lang.StringBuilder:append(char)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.lang.System"[label="java.lang.System",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"Test"[label="Test",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:Test"[label="C:Test",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.io.PrintStream"[label="java.io.PrintStream",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.util.Map$Entry"[label="java.util.Map$Entry",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"communication.UserServiceCommunication"[label="communication.UserServiceCommunication",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:communication.UserServiceCommunication"[label="C:communication.UserServiceCommunication",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.util.List"[label="java.util.List",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"com.google.gson.Gson"[label="com.google.gson.Gson",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.util.Iterator"[label="java.util.Iterator",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"C:communication.HouseholdServiceCommunication"[label="C:communication.HouseholdServiceCommunication",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"communication.HouseholdServiceCommunication"[label="communication.HouseholdServiceCommunication",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.io.IOException"[label="java.io.IOException",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.util.Set"[label="java.util.Set",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.util.HashMap"[label="java.util.HashMap",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"java.util.Map"[label="java.util.Map",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
}
subgraph cluster3 {
label = "(SS-L2):(M)java.lang.StringBuilder:toString()";
color = black;
style = bold;

"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)"[label="M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.String:length()"[label="(M)java.lang.String:length()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)"[label="M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(I)java.util.Set:iterator()"[label="(I)java.util.Set:iterator()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(S)util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)"[label="(S)util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(I)java.util.Map$Entry:getKey()"[label="(I)java.util.Map$Entry:getKey()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(I)java.util.Iterator:next()"[label="(I)java.util.Iterator:next()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.String:substring(int,int)"[label="(M)java.lang.String:substring(int,int)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.StringBuilder:append(java.lang.Object)"[label="(M)java.lang.StringBuilder:append(java.lang.Object)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)java.lang.StringBuilder:<init>()"[label="(O)java.lang.StringBuilder:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)"[label="M:communication.UserServiceCommunication:addUser(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)"[label="M:communication.ServiceServiceCommunication:addService(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)"[label="M:communication.UserServiceCommunication:deleteUser(java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.UserServiceCommunication:jsonToUser(java.lang.String)"[label="(O)communication.UserServiceCommunication:jsonToUser(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)"[label="M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(S)util.HttpUtil:executeDeleteRequest(java.lang.String)"[label="(S)util.HttpUtil:executeDeleteRequest(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)"[label="M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)"[label="(O)communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)java.util.HashMap:<init>()"[label="(O)java.util.HashMap:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.util.HashMap:put(java.lang.Object,java.lang.Object)"[label="(M)java.util.HashMap:put(java.lang.Object,java.lang.Object)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.HouseholdServiceCommunication:<init>()"[label="(O)communication.HouseholdServiceCommunication:<init>()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:Test:main(java.lang.String[])"[label="M:Test:main(java.lang.String[])",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)"[label="(M)communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.io.PrintStream:println(java.lang.Object)"[label="(M)java.io.PrintStream:println(java.lang.Object)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)"[label="M:communication.UserServiceCommunication:getUser(java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(S)util.HttpUtil:executeGetRequest(java.lang.String)"[label="(S)util.HttpUtil:executeGetRequest(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)"[label="M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)"[label="M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.StringBuilder:toString()"[label="(M)java.lang.StringBuilder:toString()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)"[label="(O)communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)"[label="M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(I)java.util.Iterator:hasNext()"[label="(I)java.util.Iterator:hasNext()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(I)java.util.Map$Entry:getValue()"[label="(I)java.util.Map$Entry:getValue()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.util.HashMap:entrySet()"[label="(M)java.util.HashMap:entrySet()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
}
subgraph cluster4 {
label = "(SS-L2):M:util.HttpUtil:executeDeleteRequest(java.lang.String)";
color = black;
style = bold;

"(M)java.io.BufferedReader:readLine()"[label="(M)java.io.BufferedReader:readLine()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)"[label="M:util.HttpUtil:executeDeleteRequest(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)java.io.InputStreamReader:<init>(java.io.InputStream)"[label="(O)java.io.InputStreamReader:<init>(java.io.InputStream)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.net.HttpURLConnection:getInputStream()"[label="(M)java.net.HttpURLConnection:getInputStream()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.net.HttpURLConnection:setDoOutput(boolean)"[label="(M)java.net.HttpURLConnection:setDoOutput(boolean)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
}
subgraph cluster5 {
label = "(SS-L2):M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)";
color = black;
style = bold;

"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)"[label="M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)communication.ServiceServiceCommunication:jsonToService(java.lang.String)"[label="(O)communication.ServiceServiceCommunication:jsonToService(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)"[label="M:communication.ServiceServiceCommunication:getService(java.lang.Long)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.lang.Exception:printStackTrace()"[label="(M)java.lang.Exception:printStackTrace()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.net.HttpURLConnection:setRequestMethod(java.lang.String)"[label="(M)java.net.HttpURLConnection:setRequestMethod(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)"[label="M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.net.HttpURLConnection:getOutputStream()"[label="(M)java.net.HttpURLConnection:getOutputStream()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.io.DataOutputStream:writeBytes(java.lang.String)"[label="(M)java.io.DataOutputStream:writeBytes(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.io.DataOutputStream:flush()"[label="(M)java.io.DataOutputStream:flush()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.io.DataOutputStream:close()"[label="(M)java.io.DataOutputStream:close()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.net.HttpURLConnection:setRequestProperty(java.lang.String,java.lang.String)"[label="(M)java.net.HttpURLConnection:setRequestProperty(java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)java.io.BufferedReader:<init>(java.io.Reader)"[label="(O)java.io.BufferedReader:<init>(java.io.Reader)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)"[label="M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)java.io.DataOutputStream:<init>(java.io.OutputStream)"[label="(O)java.io.DataOutputStream:<init>(java.io.OutputStream)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"M:util.HttpUtil:executeGetRequest(java.lang.String)"[label="M:util.HttpUtil:executeGetRequest(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.io.BufferedReader:close()"[label="(M)java.io.BufferedReader:close()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.net.URLConnection:getInputStream()"[label="(M)java.net.URLConnection:getInputStream()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(M)java.net.URL:openConnection()"[label="(M)java.net.URL:openConnection()",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
"(O)java.net.URL:<init>(java.lang.String)"[label="(O)java.net.URL:<init>(java.lang.String)",shape=ellipse,color=lightblue,fontcolor=black,style=filled];
}
"M:communication.HouseholdServiceCommunication:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"C:communication.UserServiceCommunication$1" -> "com.google.gson.reflect.TypeToken" [color=blue,font=6];
"C:communication.UserServiceCommunication$1" -> "communication.UserServiceCommunication" [color=blue,font=6];
"C:communication.UserServiceCommunication$1" -> "communication.UserServiceCommunication$1" [color=blue,font=6];
"C:communication.ServiceServiceCommunication$1" -> "com.google.gson.reflect.TypeToken" [color=blue,font=6];
"C:communication.ServiceServiceCommunication$1" -> "communication.ServiceServiceCommunication$1" [color=blue,font=6];
"C:communication.ServiceServiceCommunication$1" -> "communication.ServiceServiceCommunication" [color=blue,font=6];
"M:communication.UserServiceCommunication$1:<init>(communication.UserServiceCommunication)" -> "(O)com.google.gson.reflect.TypeToken:<init>()" [color=blue,font=6];
"M:communication.UserServiceCommunication:jsonToUser(java.lang.String)" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.UserServiceCommunication:jsonToUser(java.lang.String)" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.Class)" [color=blue,font=6];
"C:Test" -> "java.lang.Object" [color=blue,font=6];
"C:Test" -> "communication.HouseholdServiceCommunication" [color=blue,font=6];
"C:Test" -> "java.io.PrintStream" [color=blue,font=6];
"C:Test" -> "java.lang.System" [color=blue,font=6];
"C:Test" -> "Test" [color=blue,font=6];
"C:Test" -> "java.util.HashMap" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.io.BufferedReader:close()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.io.BufferedReader:readLine()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.net.HttpURLConnection:setDoOutput(boolean)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.net.URL:openConnection()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(O)java.io.InputStreamReader:<init>(java.io.InputStream)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(O)java.net.URL:<init>(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.net.HttpURLConnection:getInputStream()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(M)java.net.HttpURLConnection:setRequestMethod(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequest(java.lang.String)" -> "(O)java.io.BufferedReader:<init>(java.io.Reader)" [color=blue,font=6];
"C:model.HouseholdUserLookUpPOJO" -> "java.lang.Object" [color=blue,font=6];
"C:model.HouseholdUserLookUpPOJO" -> "model.HouseholdUserLookUpPOJO" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(M)java.lang.String:length()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(I)java.util.Map$Entry:getKey()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(O)communication.UserServiceCommunication:jsonToUser(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(S)util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(I)java.util.Map$Entry:getValue()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(M)java.lang.String:substring(int,int)" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(I)java.util.Set:iterator()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(I)java.util.Iterator:next()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(I)java.util.Iterator:hasNext()" [color=blue,font=6];
"M:communication.UserServiceCommunication:addUser(java.util.HashMap)" -> "(M)java.util.HashMap:entrySet()" [color=blue,font=6];
"M:Test:main(java.lang.String[])" -> "(O)java.util.HashMap:<init>()" [color=blue,font=6];
"M:Test:main(java.lang.String[])" -> "(M)communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" [color=blue,font=6];
"M:Test:main(java.lang.String[])" -> "(O)communication.HouseholdServiceCommunication:<init>()" [color=blue,font=6];
"M:Test:main(java.lang.String[])" -> "(M)java.io.PrintStream:println(java.lang.Object)" [color=blue,font=6];
"M:Test:main(java.lang.String[])" -> "(M)java.util.HashMap:put(java.lang.Object,java.lang.Object)" [color=blue,font=6];
"M:model.HouseholdServiceLookUpPOJO:<init>(java.lang.Long,java.lang.Long,java.lang.Long)" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)" -> "(S)util.HttpUtil:executeGetRequest(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)" -> "(O)communication.UserServiceCommunication:jsonToUser(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.UserServiceCommunication:getUser(java.lang.Long)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.lang.StringBuilder" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.util.Set" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.util.List" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "model.ServicePOJO" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.util.Iterator" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.util.Map" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.util.HashMap" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.util.Map$Entry" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "communication.ServiceServiceCommunication$1" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.lang.Object" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "util.HttpUtil" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.lang.String" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "com.google.gson.Gson" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "communication.ServiceServiceCommunication" [color=blue,font=6];
"C:communication.ServiceServiceCommunication" -> "java.lang.Exception" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)" -> "(S)util.HttpUtil:executeDeleteRequest(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)" -> "(O)communication.ServiceServiceCommunication:jsonToService(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:deleteService(java.lang.Long)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"C:model.HouseholdPOJO" -> "java.lang.Object" [color=blue,font=6];
"C:model.HouseholdPOJO" -> "model.HouseholdPOJO" [color=blue,font=6];
"C:model.HouseholdPOJO" -> "java.lang.StringBuilder" [color=blue,font=6];
"M:model.UserPOJO:toString()" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:model.UserPOJO:toString()" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:model.UserPOJO:toString()" -> "(M)java.lang.StringBuilder:append(char)" [color=blue,font=6];
"M:model.UserPOJO:toString()" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:model.UserPOJO:toString()" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:model.UserPOJO:toString()" -> "(M)java.lang.StringBuilder:append(int)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)" -> "(S)util.HttpUtil:executeDeleteRequest(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:deleteHousehold(java.lang.Long)" -> "(O)communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(M)java.io.BufferedReader:close()" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(M)java.io.BufferedReader:readLine()" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(M)java.net.URL:openConnection()" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(M)java.net.URLConnection:getInputStream()" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(O)java.io.InputStreamReader:<init>(java.io.InputStream)" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(O)java.net.URL:<init>(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:util.HttpUtil:executeGetRequest(java.lang.String)" -> "(O)java.io.BufferedReader:<init>(java.io.Reader)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getAllHouseholds()" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.reflect.Type)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getAllHouseholds()" -> "(O)communication.HouseholdServiceCommunication$1:<init>(communication.HouseholdServiceCommunication)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getAllHouseholds()" -> "(S)util.HttpUtil:executeGetRequest(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getAllHouseholds()" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getAllHouseholds()" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getAllHouseholds()" -> "(M)communication.HouseholdServiceCommunication$1:getType()" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication$1" -> "com.google.gson.reflect.TypeToken" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication$1" -> "communication.HouseholdServiceCommunication" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication$1" -> "communication.HouseholdServiceCommunication$1" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.Class)" [color=blue,font=6];
"M:model.HouseholdPOJO:<init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:model.ServicePOJO:<init>(java.lang.Long,java.lang.Long,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.lang.String)" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)" -> "(S)util.HttpUtil:executeGetRequest(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdForUserId(java.lang.Long)" -> "(O)communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)" [color=blue,font=6];
"M:model.HouseholdUserLookUpPOJO:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:util.HttpUtil:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication$1:<init>(communication.ServiceServiceCommunication)" -> "(O)com.google.gson.reflect.TypeToken:<init>()" [color=blue,font=6];
"M:model.HouseholdPOJO:toString()" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:model.HouseholdPOJO:toString()" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:model.HouseholdPOJO:toString()" -> "(M)java.lang.StringBuilder:append(char)" [color=blue,font=6];
"M:model.HouseholdPOJO:toString()" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:model.HouseholdPOJO:toString()" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:model.HouseholdPOJO:toString()" -> "(M)java.lang.StringBuilder:append(int)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(O)communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(M)java.lang.String:length()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getKey()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(S)util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getValue()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(M)java.lang.String:substring(int,int)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(I)java.util.Set:iterator()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:next()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:hasNext()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addUserToHousehold(java.util.HashMap)" -> "(M)java.util.HashMap:entrySet()" [color=blue,font=6];
"M:Test:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.lang.StringBuilder" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "model.HouseholdUserLookUpPOJO" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "communication.HouseholdServiceCommunication$1" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.util.List" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.util.Map" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "com.google.gson.Gson" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.io.IOException" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.util.Iterator" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.util.HashMap" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.lang.Exception" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "util.HttpUtil" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "model.HouseholdPOJO" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.lang.Object" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.lang.String" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "model.HouseholdServiceLookUpPOJO" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.util.Map$Entry" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "communication.HouseholdServiceCommunication" [color=blue,font=6];
"C:communication.HouseholdServiceCommunication" -> "java.util.Set" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getAllServices()" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.reflect.Type)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getAllServices()" -> "(M)communication.ServiceServiceCommunication$1:getType()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getAllServices()" -> "(S)util.HttpUtil:executeGetRequest(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getAllServices()" -> "(O)communication.ServiceServiceCommunication$1:<init>(communication.ServiceServiceCommunication)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getAllServices()" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getAllServices()" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:jsonToService(java.lang.String)" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:jsonToService(java.lang.String)" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.Class)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)" -> "(S)util.HttpUtil:executeGetRequest(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)" -> "(O)communication.ServiceServiceCommunication:jsonToService(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:getService(java.lang.Long)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:model.HouseholdServiceLookUpPOJO:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:model.ServicePOJO:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.Class)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(M)java.lang.String:length()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(I)java.util.Map$Entry:getKey()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(S)util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(I)java.util.Map$Entry:getValue()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(M)java.lang.String:substring(int,int)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(O)communication.ServiceServiceCommunication:jsonToService(java.lang.String)" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(I)java.util.Set:iterator()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(I)java.util.Iterator:next()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(I)java.util.Iterator:hasNext()" [color=blue,font=6];
"M:communication.ServiceServiceCommunication:addService(java.util.HashMap)" -> "(M)java.util.HashMap:entrySet()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(O)communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(M)java.lang.String:length()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getKey()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(M)java.io.IOException:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getValue()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(M)java.lang.String:substring(int,int)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(I)java.util.Set:iterator()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:next()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(S)util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:hasNext()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeServiceFromHousehold(java.util.HashMap)" -> "(M)java.util.HashMap:entrySet()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(O)communication.HouseholdServiceCommunication:jsonToHouseholdServiceLookup(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(M)java.lang.String:length()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getKey()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(S)util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getValue()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(M)java.lang.String:substring(int,int)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(I)java.util.Set:iterator()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:next()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:hasNext()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addServiceToHousehold(java.util.HashMap)" -> "(M)java.util.HashMap:entrySet()" [color=blue,font=6];
"M:model.HouseholdUserLookUpPOJO:<init>(java.lang.Long,java.lang.Long,java.lang.Long)" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:model.UserPOJO:<init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"M:communication.UserServiceCommunication:<init>()" -> "(O)java.lang.Object:<init>()" [color=blue,font=6];
"C:model.ServicePOJO" -> "java.lang.Object" [color=blue,font=6];
"C:model.ServicePOJO" -> "model.ServicePOJO" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication$1:<init>(communication.HouseholdServiceCommunication)" -> "(O)com.google.gson.reflect.TypeToken:<init>()" [color=blue,font=6];
"C:model.HouseholdServiceLookUpPOJO" -> "java.lang.Object" [color=blue,font=6];
"C:model.HouseholdServiceLookUpPOJO" -> "model.HouseholdServiceLookUpPOJO" [color=blue,font=6];
"C:model.UserPOJO" -> "java.lang.Object" [color=blue,font=6];
"C:model.UserPOJO" -> "java.lang.StringBuilder" [color=blue,font=6];
"C:model.UserPOJO" -> "model.UserPOJO" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(M)java.lang.String:length()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getKey()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(S)util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(O)communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getValue()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(M)java.lang.String:substring(int,int)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(I)java.util.Set:iterator()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:next()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:hasNext()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:addHousehold(java.util.HashMap)" -> "(M)java.util.HashMap:entrySet()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.Class)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(O)communication.HouseholdServiceCommunication:jsonToHouseholdUserLookup(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(M)java.lang.String:length()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getKey()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(M)java.io.IOException:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(I)java.util.Map$Entry:getValue()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(M)java.lang.String:substring(int,int)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(I)java.util.Set:iterator()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:next()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(S)util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(I)java.util.Iterator:hasNext()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:removeUserFromHousehold(java.util.HashMap)" -> "(M)java.util.HashMap:entrySet()" [color=blue,font=6];
"C:util.HttpUtil" -> "java.lang.StringBuilder" [color=blue,font=6];
"C:util.HttpUtil" -> "java.net.HttpURLConnection" [color=blue,font=6];
"C:util.HttpUtil" -> "java.io.DataOutputStream" [color=blue,font=6];
"C:util.HttpUtil" -> "java.net.URL" [color=blue,font=6];
"C:util.HttpUtil" -> "java.io.IOException" [color=blue,font=6];
"C:util.HttpUtil" -> "java.io.InputStreamReader" [color=blue,font=6];
"C:util.HttpUtil" -> "java.lang.Object" [color=blue,font=6];
"C:util.HttpUtil" -> "java.net.URLConnection" [color=blue,font=6];
"C:util.HttpUtil" -> "java.lang.String" [color=blue,font=6];
"C:util.HttpUtil" -> "util.HttpUtil" [color=blue,font=6];
"C:util.HttpUtil" -> "java.io.BufferedReader" [color=blue,font=6];
"C:util.HttpUtil" -> "java.lang.Exception" [color=blue,font=6];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)" -> "(S)util.HttpUtil:executeDeleteRequest(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)" -> "(O)communication.UserServiceCommunication:jsonToUser(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.UserServiceCommunication:deleteUser(java.lang.Long)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.Object)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)" -> "(S)util.HttpUtil:executeGetRequest(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:communication.HouseholdServiceCommunication:getHouseholdByHouseholdId(java.lang.Long)" -> "(O)communication.HouseholdServiceCommunication:jsonToHousehold(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:getAllUsers()" -> "(M)communication.UserServiceCommunication$1:getType()" [color=blue,font=6];
"M:communication.UserServiceCommunication:getAllUsers()" -> "(M)com.google.gson.Gson:fromJson(java.lang.String,java.lang.reflect.Type)" [color=blue,font=6];
"M:communication.UserServiceCommunication:getAllUsers()" -> "(S)util.HttpUtil:executeGetRequest(java.lang.String)" [color=blue,font=6];
"M:communication.UserServiceCommunication:getAllUsers()" -> "(M)java.lang.Exception:printStackTrace()" [color=blue,font=6];
"M:communication.UserServiceCommunication:getAllUsers()" -> "(O)com.google.gson.Gson:<init>()" [color=blue,font=6];
"M:communication.UserServiceCommunication:getAllUsers()" -> "(O)communication.UserServiceCommunication$1:<init>(communication.UserServiceCommunication)" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.lang.StringBuilder" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.util.Set" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "model.UserPOJO" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.util.List" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.util.Iterator" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.util.Map" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.util.HashMap" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.util.Map$Entry" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.lang.Object" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "communication.UserServiceCommunication$1" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "util.HttpUtil" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.lang.String" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "communication.UserServiceCommunication" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "com.google.gson.Gson" [color=blue,font=6];
"C:communication.UserServiceCommunication" -> "java.lang.Exception" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:setDoOutput(boolean)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.io.DataOutputStream:close()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.io.DataOutputStream:writeBytes(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(O)java.io.BufferedReader:<init>(java.io.Reader)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:getOutputStream()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.net.URL:openConnection()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(O)java.io.DataOutputStream:<init>(java.io.OutputStream)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.io.DataOutputStream:flush()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.io.BufferedReader:readLine()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.io.BufferedReader:close()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:getInputStream()" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:setRequestProperty(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:setRequestMethod(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(O)java.io.InputStreamReader:<init>(java.io.InputStream)" [color=blue,font=6];
"M:util.HttpUtil:executeDeleteRequestWithBody(java.lang.String,java.lang.String)" -> "(O)java.net.URL:<init>(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:setDoOutput(boolean)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.io.DataOutputStream:close()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.lang.StringBuilder:append(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(O)java.lang.StringBuilder:<init>()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.io.DataOutputStream:writeBytes(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(O)java.io.BufferedReader:<init>(java.io.Reader)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.lang.StringBuilder:toString()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:getOutputStream()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.net.URL:openConnection()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(O)java.io.DataOutputStream:<init>(java.io.OutputStream)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.io.DataOutputStream:flush()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.io.BufferedReader:readLine()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.io.BufferedReader:close()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:getInputStream()" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:setRequestProperty(java.lang.String,java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(M)java.net.HttpURLConnection:setRequestMethod(java.lang.String)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(O)java.io.InputStreamReader:<init>(java.io.InputStream)" [color=blue,font=6];
"M:util.HttpUtil:executePostRequest(java.lang.String,java.lang.String)" -> "(O)java.net.URL:<init>(java.lang.String)" [color=blue,font=6];
}
